//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/ZombiesDesert/Core/Input/InputActions/IA_Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IA_Player"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""2ef95df6-2d8a-4e71-b7e3-cf4779d3642a"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""03a907b2-975b-40a4-b42b-7d4066ea3386"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""519f951e-e75c-41fa-bff1-d9b350f9ca2f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""f0c05ff1-4fb3-4488-b4fb-ff546cdb04b0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""b6971ead-d1bb-4cdd-8004-e44f50c45805"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipFirstSlot"",
                    ""type"": ""Button"",
                    ""id"": ""90c88cb7-6028-4eec-8f11-c61899c89f9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipSecondSlot"",
                    ""type"": ""Button"",
                    ""id"": ""3344961c-46b3-4d39-afbb-1bd68d8549ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipThirdSlot"",
                    ""type"": ""Button"",
                    ""id"": ""36bb2516-fe3c-4175-92ac-dbb73744c750"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipFourthSlot"",
                    ""type"": ""Button"",
                    ""id"": ""908cd8c3-4d65-48eb-9e71-dd2a544be074"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""b9325857-e112-4a33-8fbd-2c07526a80d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimPrecisely"",
                    ""type"": ""Button"",
                    ""id"": ""3339d59e-94b4-4150-85dc-7295a2e56fc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetLocking"",
                    ""type"": ""Button"",
                    ""id"": ""9a10f8ea-c1b7-4bd6-a23b-d7c9a3103e66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropCurrentWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""a4bac6f9-bb2c-4c0d-8a9c-2c7f55fc4aa3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipItem"",
                    ""type"": ""Value"",
                    ""id"": ""df4a5ea9-58cc-477e-b151-a75d960fbeba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MenuOpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""20b1e80d-824b-4bc2-84f6-f0bfb2ffcf69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5a15cc0b-4c14-4d4c-ad64-cc5dd5efe002"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""9a3a5839-81dc-4a54-bb53-5d906597b379"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0203a09d-ff69-401f-b367-1cad67143ad2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e1a26c46-9fdd-44ce-9d76-ee9787eb757d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c3d62db4-e1e0-46a8-93e4-fd674b9879ea"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2824fe00-8dce-4c7c-9c62-b276e451b7f1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d980da97-2bbb-4bb7-b3c6-ad68d4832cb4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07bac6b3-f2a5-4179-874d-8794e7b19300"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b76e2e19-bd08-4d1e-9596-979104e7cf23"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EquipFirstSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c467acc7-3ea3-4ada-98e9-9a322fe7ce1f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EquipSecondSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f25dbd3c-ccce-43b0-82fd-2c2bca559755"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EquipThirdSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9550116c-fa01-4680-8e08-9db67433cb8e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EquipFourthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""586439e1-40b7-4e0f-8e84-07a19cf2a325"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""862e83b0-ce8d-4daa-9604-913fe201e425"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AimPrecisely"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c424f98-ec5a-47f5-9129-2cd4bf6e1ac3"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TargetLocking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a7e6ad8-acff-41cf-b76b-306d71d4b46f"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DropCurrentWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7b72a9c-ca88-40ca-8b34-979fb9792e8a"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EquipItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1863105b-ae5f-4c88-92ec-4a13579ccea4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebef90c3-9994-4ea9-9258-b595236da42a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dca2b73-a54e-4d55-9b59-91336e3fe161"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Fire = m_Character.FindAction("Fire", throwIfNotFound: true);
        m_Character_Movement = m_Character.FindAction("Movement", throwIfNotFound: true);
        m_Character_Aim = m_Character.FindAction("Aim", throwIfNotFound: true);
        m_Character_Run = m_Character.FindAction("Run", throwIfNotFound: true);
        m_Character_EquipFirstSlot = m_Character.FindAction("EquipFirstSlot", throwIfNotFound: true);
        m_Character_EquipSecondSlot = m_Character.FindAction("EquipSecondSlot", throwIfNotFound: true);
        m_Character_EquipThirdSlot = m_Character.FindAction("EquipThirdSlot", throwIfNotFound: true);
        m_Character_EquipFourthSlot = m_Character.FindAction("EquipFourthSlot", throwIfNotFound: true);
        m_Character_Reload = m_Character.FindAction("Reload", throwIfNotFound: true);
        m_Character_AimPrecisely = m_Character.FindAction("AimPrecisely", throwIfNotFound: true);
        m_Character_TargetLocking = m_Character.FindAction("TargetLocking", throwIfNotFound: true);
        m_Character_DropCurrentWeapon = m_Character.FindAction("DropCurrentWeapon", throwIfNotFound: true);
        m_Character_EquipItem = m_Character.FindAction("EquipItem", throwIfNotFound: true);
        m_Character_MenuOpenClose = m_Character.FindAction("MenuOpenClose", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_Fire;
    private readonly InputAction m_Character_Movement;
    private readonly InputAction m_Character_Aim;
    private readonly InputAction m_Character_Run;
    private readonly InputAction m_Character_EquipFirstSlot;
    private readonly InputAction m_Character_EquipSecondSlot;
    private readonly InputAction m_Character_EquipThirdSlot;
    private readonly InputAction m_Character_EquipFourthSlot;
    private readonly InputAction m_Character_Reload;
    private readonly InputAction m_Character_AimPrecisely;
    private readonly InputAction m_Character_TargetLocking;
    private readonly InputAction m_Character_DropCurrentWeapon;
    private readonly InputAction m_Character_EquipItem;
    private readonly InputAction m_Character_MenuOpenClose;
    public struct CharacterActions
    {
        private @PlayerControls m_Wrapper;
        public CharacterActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Character_Fire;
        public InputAction @Movement => m_Wrapper.m_Character_Movement;
        public InputAction @Aim => m_Wrapper.m_Character_Aim;
        public InputAction @Run => m_Wrapper.m_Character_Run;
        public InputAction @EquipFirstSlot => m_Wrapper.m_Character_EquipFirstSlot;
        public InputAction @EquipSecondSlot => m_Wrapper.m_Character_EquipSecondSlot;
        public InputAction @EquipThirdSlot => m_Wrapper.m_Character_EquipThirdSlot;
        public InputAction @EquipFourthSlot => m_Wrapper.m_Character_EquipFourthSlot;
        public InputAction @Reload => m_Wrapper.m_Character_Reload;
        public InputAction @AimPrecisely => m_Wrapper.m_Character_AimPrecisely;
        public InputAction @TargetLocking => m_Wrapper.m_Character_TargetLocking;
        public InputAction @DropCurrentWeapon => m_Wrapper.m_Character_DropCurrentWeapon;
        public InputAction @EquipItem => m_Wrapper.m_Character_EquipItem;
        public InputAction @MenuOpenClose => m_Wrapper.m_Character_MenuOpenClose;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @EquipFirstSlot.started += instance.OnEquipFirstSlot;
            @EquipFirstSlot.performed += instance.OnEquipFirstSlot;
            @EquipFirstSlot.canceled += instance.OnEquipFirstSlot;
            @EquipSecondSlot.started += instance.OnEquipSecondSlot;
            @EquipSecondSlot.performed += instance.OnEquipSecondSlot;
            @EquipSecondSlot.canceled += instance.OnEquipSecondSlot;
            @EquipThirdSlot.started += instance.OnEquipThirdSlot;
            @EquipThirdSlot.performed += instance.OnEquipThirdSlot;
            @EquipThirdSlot.canceled += instance.OnEquipThirdSlot;
            @EquipFourthSlot.started += instance.OnEquipFourthSlot;
            @EquipFourthSlot.performed += instance.OnEquipFourthSlot;
            @EquipFourthSlot.canceled += instance.OnEquipFourthSlot;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @AimPrecisely.started += instance.OnAimPrecisely;
            @AimPrecisely.performed += instance.OnAimPrecisely;
            @AimPrecisely.canceled += instance.OnAimPrecisely;
            @TargetLocking.started += instance.OnTargetLocking;
            @TargetLocking.performed += instance.OnTargetLocking;
            @TargetLocking.canceled += instance.OnTargetLocking;
            @DropCurrentWeapon.started += instance.OnDropCurrentWeapon;
            @DropCurrentWeapon.performed += instance.OnDropCurrentWeapon;
            @DropCurrentWeapon.canceled += instance.OnDropCurrentWeapon;
            @EquipItem.started += instance.OnEquipItem;
            @EquipItem.performed += instance.OnEquipItem;
            @EquipItem.canceled += instance.OnEquipItem;
            @MenuOpenClose.started += instance.OnMenuOpenClose;
            @MenuOpenClose.performed += instance.OnMenuOpenClose;
            @MenuOpenClose.canceled += instance.OnMenuOpenClose;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @EquipFirstSlot.started -= instance.OnEquipFirstSlot;
            @EquipFirstSlot.performed -= instance.OnEquipFirstSlot;
            @EquipFirstSlot.canceled -= instance.OnEquipFirstSlot;
            @EquipSecondSlot.started -= instance.OnEquipSecondSlot;
            @EquipSecondSlot.performed -= instance.OnEquipSecondSlot;
            @EquipSecondSlot.canceled -= instance.OnEquipSecondSlot;
            @EquipThirdSlot.started -= instance.OnEquipThirdSlot;
            @EquipThirdSlot.performed -= instance.OnEquipThirdSlot;
            @EquipThirdSlot.canceled -= instance.OnEquipThirdSlot;
            @EquipFourthSlot.started -= instance.OnEquipFourthSlot;
            @EquipFourthSlot.performed -= instance.OnEquipFourthSlot;
            @EquipFourthSlot.canceled -= instance.OnEquipFourthSlot;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @AimPrecisely.started -= instance.OnAimPrecisely;
            @AimPrecisely.performed -= instance.OnAimPrecisely;
            @AimPrecisely.canceled -= instance.OnAimPrecisely;
            @TargetLocking.started -= instance.OnTargetLocking;
            @TargetLocking.performed -= instance.OnTargetLocking;
            @TargetLocking.canceled -= instance.OnTargetLocking;
            @DropCurrentWeapon.started -= instance.OnDropCurrentWeapon;
            @DropCurrentWeapon.performed -= instance.OnDropCurrentWeapon;
            @DropCurrentWeapon.canceled -= instance.OnDropCurrentWeapon;
            @EquipItem.started -= instance.OnEquipItem;
            @EquipItem.performed -= instance.OnEquipItem;
            @EquipItem.canceled -= instance.OnEquipItem;
            @MenuOpenClose.started -= instance.OnMenuOpenClose;
            @MenuOpenClose.performed -= instance.OnMenuOpenClose;
            @MenuOpenClose.canceled -= instance.OnMenuOpenClose;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface ICharacterActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnEquipFirstSlot(InputAction.CallbackContext context);
        void OnEquipSecondSlot(InputAction.CallbackContext context);
        void OnEquipThirdSlot(InputAction.CallbackContext context);
        void OnEquipFourthSlot(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnAimPrecisely(InputAction.CallbackContext context);
        void OnTargetLocking(InputAction.CallbackContext context);
        void OnDropCurrentWeapon(InputAction.CallbackContext context);
        void OnEquipItem(InputAction.CallbackContext context);
        void OnMenuOpenClose(InputAction.CallbackContext context);
    }
}
